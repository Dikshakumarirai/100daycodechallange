What is Java Sort?
the collections framework provides a static method sort() that can be used to sort elements in a collection. 
The sort() method of the collections framework uses the merge sort algorithm to sort elements of a collection.
The merge sort algorithm is based on divide and conquers rule.

Output Format

After rearranging the students according to the above rules, print the first name of each student on a separate line.

Sample Input

5
33 Rumpa 3.68
85 Ashis 3.85
56 Samiha 3.75
19 Samara 3.75
22 Fahim 3.76
Sample Output

Ashis
Fahim
Samara
Samiha
Rumpa

import java.util.*;

class Student{
	private int id;
	private String fname;
	private double cgpa;
	public Student(int id, String fname, double cgpa) {
		super();
		this.id = id;
		this.fname = fname;
		this.cgpa = cgpa;
	}
	public int getId() {
		return id;
	}
	public String getFname() {
		return fname;
	}
	public double getCgpa() {
		return cgpa;
	}
}

//Complete the code
public class Solution
{
	
 public static void main(String[] args){
      Scanner in = new Scanner(System.in);
      int testCases = Integer.parseInt(in.nextLine());
      
      List<Student> studentList = new ArrayList<Student>();
      while(testCases>0){
         int id = in.nextInt();
         String fname = in.next();
         double cgpa = in.nextDouble();
         
         Student st = new Student(id, fname, cgpa);
         studentList.add(st);
         
         testCases--;
      }
      
      Collections.sort(studentList,new Comparator<Student>(){
        public int compare(Student s1, Student s2){
            if((s1.getCgpa()*100) != (s2.getCgpa()*100)){
                return (int)((s2.getCgpa()*1000) - (s1.getCgpa()*1000));
            }
            else if(!(s1.getFname().equals(s2.getFname()))){
                return s1.getFname().compareTo(s2.getFname());
            }
            else{
                return s1.getId()-s2.getId();
            }
        }
      });    
      
      for(Student st: studentList){
         System.out.println(st.getFname());
      }
   }
}


