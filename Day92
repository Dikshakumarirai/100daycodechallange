Sample Input 1

8
1
2
100
12303479849857341718340192371
3084193741082937
3084193741082938
111
200
Sample Output 1

1
2
100
111
200
3084193741082937
3084193741082938
12303479849857341718340192371

import java.io.*;
import java.util.*;
import java.text.*;
import java.math.*;
import java.util.regex.*;

public class Solution {

    public static void main(String[] args) {
        Scanner in = new Scanner(System.in);
        int n = in.nextInt();
        String[] unsorted = new String[n];
        for(int unsorted_i=0; unsorted_i < n; unsorted_i++){
            unsorted[unsorted_i] = in.next();
        }
        Map<Integer, ArrayList<String>> map = new TreeMap<>();
        for(int i = 0; i < n; i++) {
            ArrayList<String> mapValue = map.get(unsorted[i].length());
            if(mapValue == null) {
                mapValue = new ArrayList<>();
                mapValue.add(unsorted[i]);
                map.put(unsorted[i].length(), mapValue);
            } else {
                mapValue.add(unsorted[i]);
            }
        }
        
        for(ArrayList<String> list : map.values()) {
            Collections.sort(list);
        }
        
        for(Integer i : map.keySet()) {
            System.out.println(Arrays.toString(map.get(i).toArray(new String[0])).replaceAll("[\\[\\],]", "").replaceAll(" ", "\n"));
        }
    }
}
